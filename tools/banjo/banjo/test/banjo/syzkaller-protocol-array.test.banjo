// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library banjo.examples.syzkaller.protocol.array;

protocol Api {
    [argtype="vptr IN"]
    VoidPtr(array<voidptr>:1 vptr) -> (zx.status st);
    [argtype="vptr OUT"]
    VoidPtr(array<voidptr>:1 vptr) -> (zx.status st);

    [argtype="sz IN"]
    Usize(array<usize>:1 sz) -> (zx.status st);
    [argtype="sz OUT"]
    Usize(array<usize>:1 sz) -> (zx.status st);

    [argtype="b IN"]
    Bool(array<bool>:1 b) -> (zx.status st);
    [argtype="b OUT"]
    Bool(array<bool>:1 b) -> (zx.status st);

    [argtype="i8 IN"]
    Int8(array<int8>:1 i8) -> (zx.status st);
    [argtype="i8 OUT"]
    Int8(array<int8>:1 i8) -> (zx.status st);

    [argtype="i16 IN"]
    Int16(array<int16>:1 i16) -> (zx.status st);
    [argtype="i16 OUT"]
    Int16(array<int16>:1 i16) -> (zx.status st);

    [argtype="i32 IN"]
    Int32(array<int32>:1 i32) -> (zx.status st);
    [argtype="i32 OUT"]
    Int32(array<int32>:1 i32) -> (zx.status st);

    [argtype="i64 IN"]
    Int64(array<int64>:1 i64) -> (zx.status st);
    [argtype="i64 OUT"]
    Int64(array<int64>:1 i64) -> (zx.status st);

    [argtype="u8 IN"]
    Uint8(array<uint8>:1 u8) -> (zx.status st);
    [argtype="u8 OUT"]
    Uint8(array<uint8>:1 u8) -> (zx.status st);

    [argtype="u16 IN"]
    Uint16(array<uint16>:1 u16) -> (zx.status st);
    [argtype="u16 OUT"]
    Uint16(array<uint16>:1 u16) -> (zx.status st);

    [argtype="u32 IN"]
    Uint32(array<uint32>:1 u32) -> (zx.status st);
    [argtype="u32 OUT"]
    Uint32(array<uint32>:1 u32) -> (zx.status st);

    [argtype="u64 IN"]
    Uint64(array<uint64>:1 u64) -> (zx.status st);
    [argtype="u64 OUT"]
    Uint64(array<uint64>:1 u64) -> (zx.status st);
};
