# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config.gni")
import("//build/package.gni")
import("//build/test/test_package.gni")
import("//garnet/lib/magma/gnbuild/magma.gni")

# Only including packages built inside this file.
have_libvulkan_mali =
    build_libvulkan_arm_mali != [] || have_prebuilt_libvulkan_arm

group("magma-vulkan") {
  if (magma_enable_developer_build) {
    testonly = true
    deps = [
      "//garnet/lib/magma/tests/unit_tests:testing_firmware_file",
    ]
  }
  public_deps = [
    ":magma-arm-mali",
  ]
  if (have_libvulkan_mali) {
    public_deps += [ ":magma-arm-mali-config" ]
  }
}

if (have_prebuilt_libvulkan_arm) {
  libvulkan_gen_path = "$target_gen_dir/libvulkan"
}

if (have_libvulkan_mali) {
  icd_list = []
  if (build_libvulkan_arm_mali != []) {
    foreach(entry, build_libvulkan_arm_mali) {
      icd_list += [
        {
          name = get_label_info(entry, "name")
        },
      ]
    }
  } else if (have_prebuilt_libvulkan_arm) {
    icd_list += [
      {
        name = "libvulkan_arm"
        library_path = "$libvulkan_gen_path/libvulkan_arm.so"
      },
    ]
  }
}

package("magma-arm-mali") {
  deprecated_system_image = true
  if (magma_enable_developer_build) {
    testonly = true
  }

  if (magma_enable_developer_build) {
    deps = [
      "//garnet/drivers/gpu/msd-arm-mali:msd_arm_test",
    ]
    drivers = [
      {
        name = "libmsd_arm_test.so"
      },
    ]
  } else {
    deps = [
      "//garnet/drivers/gpu/msd-arm-mali:msd_arm",
    ]
    drivers = [
      {
        name = "libmsd_arm.so"
      },
    ]
  }

  if (have_libvulkan_mali) {
    resources = []
    libraries = []
    deps += build_libvulkan_arm_mali
    if (build_libvulkan_arm_mali == []) {
      # Building libvulkan overrides using a prebuilt.
      deps += [ ":prebuilt_libvulkan" ]
    }

    foreach(entry, icd_list) {
      icd_name = entry.name
      if (defined(entry.library_path)) {
        libraries += [
          {
            source = entry.library_path
            name = "$icd_name.so"
          },
        ]
      } else {
        libraries += [
          {
            name = "$icd_name.so"
          },
        ]
      }
    }
  }
}

if (have_libvulkan_mali) {
  config_data("magma-arm-mali-config") {
    sources = []
    foreach(entry, icd_list) {
      icd_name = entry.name
      filename = "$target_gen_dir/vulkan/icd.d/$icd_name.json"
      icd_data = []
      icd_data = [
        "{",
        "\"file_format_version\": \"1.0.0\",",
        "\"ICD\": {",
        "\"library_path\": \"$icd_name.so\",",
        "\"api_version\": \"1.0.68\"",
        "}",
        "}",
      ]
      write_file(filename, icd_data)
      sources += [ rebase_path(filename) ]
    }

    for_pkg = "vulkan-icd"
    outputs = [
      "icd.d/{{source_file_part}}",
    ]
  }
}

if (have_prebuilt_libvulkan_arm) {
  config("libvulkan_config") {
    libs = [ "vulkan_arm" ]
    lib_dirs = [ libvulkan_gen_path ]
  }
  copy("prebuilt_libvulkan") {
    public_configs = [ ":libvulkan_config" ]
    sources = [
      prebuilt_libvulkan_arm_path,
    ]
    outputs = [
      "$libvulkan_gen_path/libvulkan_arm.so",
    ]
    deps = [
      "//third_party/zlib",
    ]
  }
}

test_package("msd_arm_mali_nonhardware_tests") {
  deps = [
    "//garnet/drivers/gpu/msd-arm-mali:tests",
  ]

  tests = [
    {
      name = "msd_arm_mali_nonhardware_tests"
    },
  ]
}

# Run with autorun or "run_test_component msd_arm_mali_integration_tests"
test_package("msd-arm-mali-integration-tests") {
  tests = []

  deps = [
    "//garnet/drivers/gpu/msd-arm-mali/tests/integration",
  ]

  tests = [
    {
      name = "msd_arm_mali_integration_tests"
      environments = arm_gpu_envs
    },
  ]
}
