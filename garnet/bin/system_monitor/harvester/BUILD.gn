# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

group("harvester") {
  testonly = true
  deps = [
    ":bin",
    ":system_monitor_harvester",
    ":system_monitor_harvester_test",
  ]
}

source_set("lib") {
  sources = [
    "dockyard_proxy.h",
    "gather_category.cc",
    "gather_category.h",
    "gather_cpu.cc",
    "gather_cpu.h",
    "gather_inspectable.cc",
    "gather_inspectable.h",
    "gather_introspection.cc",
    "gather_introspection.h",
    "gather_memory.cc",
    "gather_memory.h",
    "gather_tasks.cc",
    "gather_tasks.h",
    "harvester.cc",
    "harvester.h",
    "root_resource.cc",
    "root_resource.h",
  ]

  public_deps = [
    "//garnet/lib/system_monitor/dockyard:lib",
    "//garnet/lib/system_monitor/dockyard:protos",
    "//garnet/public/lib/inspect_deprecated/query",
    "//src/lib/fxl",
    "//zircon/public/fidl/fuchsia-sysinfo:fuchsia-sysinfo_c",
    "//zircon/public/fidl/fuchsia-boot:fuchsia-boot_c",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/task-utils",
  ]
}

executable("bin") {
  output_name = "system_monitor_harvester"

  sources = [
    "dockyard_proxy_grpc.cc",
    "dockyard_proxy_grpc.h",
    "dockyard_proxy_local.cc",
    "dockyard_proxy_local.h",
    "harvester_main.cc",
  ]

  deps = [
    ":lib",
    "//third_party/grpc:grpc++",
  ]
}

package("system_monitor_harvester") {
  deprecated_shell = "//build"
  rootresource_svc = "//build"

  deps = [
    ":bin",
  ]

  binaries = [
    {
      name = "system_monitor_harvester"
    },
  ]

  meta = [
    {
      path = rebase_path("meta/system_monitor_harvester.cmx")
      dest = "system_monitor_harvester.cmx"
    },
  ]
}

executable("system_monitor_harvester_test") {
  testonly = true

  sources = [
    "dockyard_proxy_fake.cc",
    "dockyard_proxy_fake.h",
    "gather_cpu_test.cc",
    "gather_inspectable_test.cc",
    "gather_introspection_test.cc",
    "gather_memory_test.cc",
    "gather_tasks_test.cc",
    "harvester_fake.h",
    "harvester_test.cc",
    "root_resource_test.cc",
  ]

  deps = [
    ":lib",
    "//garnet/public/lib/gtest",
    "//sdk/lib/sys/cpp/testing:unit",
    "//src/lib/fxl/test:gtest_main",
  ]
}

test_package("system_monitor_harvester_tests") {
  deprecated_shell = "//build"
  rootresource_svc = "//build"

  deps = [
    ":system_monitor_harvester_test",
  ]

  tests = [
    {
      name = "system_monitor_harvester_test"
      environments = basic_envs
    },
  ]
}
