# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

group("test") {
  testonly = true
  deps = [
    ":metric_broker_config_cobalt_tests",
  ]
}

executable("schema_verification_test") {
  testonly = true
  output_name = "schema_verification_test"
  sources = [
    "schema_verification_test.cc",
  ]
  deps = [
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gmock",
    "//third_party/rapidjson",
  ]
}

executable("event_codes_test") {
  testonly = true
  output_name = "event_codes_test"
  sources = [
    "event_codes_test.cc",
  ]
  deps = [
    "//garnet/bin/metric_broker/config/cobalt:event_codes",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gmock",
  ]
}

executable("metric_config_test") {
  testonly = true
  output_name = "metric_config_test"
  sources = [
    "metric_config_test.cc",
  ]
  deps = [
    "//garnet/bin/metric_broker/config/cobalt:event_codes",
    "//garnet/bin/metric_broker/config/cobalt:metric_config",
    "//garnet/bin/metric_broker/config/cobalt:types",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gmock",
  ]
}

executable("project_config_test") {
  testonly = true
  output_name = "project_config_test"
  sources = [
    "project_config_test.cc",
  ]
  deps = [
    "//garnet/bin/metric_broker/config/cobalt:event_codes",
    "//garnet/bin/metric_broker/config/cobalt:metric_config",
    "//garnet/bin/metric_broker/config/cobalt:project_config",
    "//garnet/bin/metric_broker/config/cobalt:types",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gmock",
  ]
}

executable("cobalt_config_reader_test") {
  testonly = true
  output_name = "cobalt_config_reader_test"
  sources = [
    "cobalt_config_reader_test.cc",
  ]
  deps = [
    "//garnet/bin/metric_broker/config/cobalt:cobalt_config_reader",
    "//garnet/bin/metric_broker/config/cobalt:event_codes",
    "//garnet/bin/metric_broker/config/cobalt:metric_config",
    "//garnet/bin/metric_broker/config/cobalt:project_config",
    "//garnet/bin/metric_broker/config/cobalt:types",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gmock",
    "//third_party/rapidjson",
  ]
}

unittest_package("metric_broker_config_cobalt_tests") {
  tests = [
    {
      name = "schema_verification_test"
      environments = basic_envs
    },
    {
      name = "event_codes_test"
      environments = basic_envs
    },
    {
      name = "metric_config_test"
      environments = basic_envs
    },
    {
      name = "project_config_test"
      environments = basic_envs
    },
    {
      name = "cobalt_config_reader_test"
      environments = basic_envs
    },
  ]

  deps = [
    ":cobalt_config_reader_test",
    ":event_codes_test",
    ":metric_config_test",
    ":project_config_test",
    ":schema_verification_test",
  ]

  resources = [
    {
      path = rebase_path(
              "//garnet/bin/metric_broker/config/cobalt/config.schema.json")
      dest = "testdata/cobalt/config.schema.json"
    },
  ]
}
