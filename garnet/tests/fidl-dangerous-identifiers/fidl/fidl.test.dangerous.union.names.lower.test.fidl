// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.union.names.lower;
using membertype = uint32;
union abstract { membertype member; };
union alignas { membertype member; };
union alignof { membertype member; };
union and { membertype member; };
union and_eq { membertype member; };
union as { membertype member; };
union asm { membertype member; };
union assert { membertype member; };
union async { membertype member; };
union atomic_cancel { membertype member; };
union atomic_commit { membertype member; };
union atomic_noexcept { membertype member; };
union auto { membertype member; };
union await { membertype member; };
union become { membertype member; };
union bitand { membertype member; };
union bitor { membertype member; };
union bool { membertype member; };
union box { membertype member; };
union break { membertype member; };
union byte { membertype member; };
union case { membertype member; };
union catch { membertype member; };
union chan { membertype member; };
union char { membertype member; };
union char16_t { membertype member; };
union char32_t { membertype member; };
union class { membertype member; };
union co_await { membertype member; };
union co_return { membertype member; };
union co_yield { membertype member; };
union coding_traits { membertype member; };
union compl { membertype member; };
union concept { membertype member; };
union const { membertype member; };
union const_cast { membertype member; };
union constexpr { membertype member; };
union continue { membertype member; };
union controller { membertype member; };
union covariant { membertype member; };
union crate { membertype member; };
union decltype { membertype member; };
union decoder { membertype member; };
union default { membertype member; };
union defer { membertype member; };
union deferred { membertype member; };
union delete { membertype member; };
union do { membertype member; };
union double { membertype member; };
union dynamic { membertype member; };
union dynamic_cast { membertype member; };
union else { membertype member; };
union encoder { membertype member; };
union ensure_values_instantiated { membertype member; };
union enum { membertype member; };
union err { membertype member; };
union explicit { membertype member; };
union export { membertype member; };
union extends { membertype member; };
union extern { membertype member; };
union external { membertype member; };
union factory { membertype member; };
union fallthrough { membertype member; };
union false { membertype member; };
union fidl { membertype member; };
union fidl_type { membertype member; };
union final { membertype member; };
union finally { membertype member; };
union float { membertype member; };
union fn { membertype member; };
union for { membertype member; };
union friend { membertype member; };
union func { membertype member; };
union future { membertype member; };
union futures { membertype member; };
union get { membertype member; };
union go { membertype member; };
union goto { membertype member; };
union has_invalid_tag { membertype member; };
union hash_code { membertype member; };
union if { membertype member; };
union impl { membertype member; };
union implements { membertype member; };
union import { membertype member; };
union in { membertype member; };
union index { membertype member; };
union inline { membertype member; };
union int { membertype member; };
union int16 { membertype member; };
union int32 { membertype member; };
union int64 { membertype member; };
union int8 { membertype member; };
union interface { membertype member; };
union is { membertype member; };
union let { membertype member; };
union lhs { membertype member; };
union library { membertype member; };
union list { membertype member; };
union long { membertype member; };
union loop { membertype member; };
union macro { membertype member; };
union map { membertype member; };
union match { membertype member; };
union mixin { membertype member; };
union mod { membertype member; };
union module { membertype member; };
union move { membertype member; };
union mut { membertype member; };
union mutable { membertype member; };
union namespace { membertype member; };
union never { membertype member; };
union new { membertype member; };
union no_such_method { membertype member; };
union noexcept { membertype member; };
union none { membertype member; };
union not { membertype member; };
union not_eq { membertype member; };
union null { membertype member; };
union nullptr { membertype member; };
union num { membertype member; };
union object { membertype member; };
union offset { membertype member; };
union offsetof { membertype member; };
union ok { membertype member; };
union on_open { membertype member; };
union operator { membertype member; };
union option { membertype member; };
union or { membertype member; };
union or_eq { membertype member; };
union override { membertype member; };
union package { membertype member; };
union part { membertype member; };
union priv { membertype member; };
union private { membertype member; };
union proc { membertype member; };
union protected { membertype member; };
union proxy { membertype member; };
union pub { membertype member; };
union public { membertype member; };
union pure { membertype member; };
union range { membertype member; };
union ref { membertype member; };
union register { membertype member; };
union reinterpret_cast { membertype member; };
union requires { membertype member; };
union result { membertype member; };
union rethrow { membertype member; };
union return { membertype member; };
union rhs { membertype member; };
union rune { membertype member; };
union runtime_type { membertype member; };
union select { membertype member; };
union self { membertype member; };
union send { membertype member; };
union set { membertype member; };
union set_controller { membertype member; };
union short { membertype member; };
union signed { membertype member; };
union sizeof { membertype member; };
union some { membertype member; };
union static { membertype member; };
union static_assert { membertype member; };
union static_cast { membertype member; };
union stream { membertype member; };
union string { membertype member; };
union struct { membertype member; };
union stub { membertype member; };
union super { membertype member; };
union switch { membertype member; };
union synchronized { membertype member; };
union template { membertype member; };
union this { membertype member; };
union thread_local { membertype member; };
union throw { membertype member; };
union to_string { membertype member; };
union trait { membertype member; };
union true { membertype member; };
union try { membertype member; };
union type { membertype member; };
union typedef { membertype member; };
union typeid { membertype member; };
union typename { membertype member; };
union typeof { membertype member; };
union uint16 { membertype member; };
union uint64 { membertype member; };
union uint8 { membertype member; };
union union { membertype member; };
union unsafe { membertype member; };
union unsigned { membertype member; };
union unsized { membertype member; };
union use { membertype member; };
union using { membertype member; };
union value { membertype member; };
union value_of { membertype member; };
union value_union { membertype member; };
union values_map { membertype member; };
union var { membertype member; };
union vec { membertype member; };
union virtual { membertype member; };
union void { membertype member; };
union volatile { membertype member; };
union wchar_t { membertype member; };
union where { membertype member; };
union which { membertype member; };
union while { membertype member; };
union with { membertype member; };
union xor { membertype member; };
union xor_eq { membertype member; };
union xunion { membertype member; };
union yield { membertype member; };
union zx { membertype member; };
union DangerousMembers {
  abstract f0;
  alignas f1;
  alignof f2;
  and f3;
  and_eq f4;
  as f5;
  asm f6;
  assert f7;
  async f8;
  atomic_cancel f9;
  atomic_commit f10;
  atomic_noexcept f11;
  auto f12;
  await f13;
  become f14;
  bitand f15;
  bitor f16;
  bool f17;
  box f18;
  break f19;
  byte f20;
  case f21;
  catch f22;
  chan f23;
  char f24;
  char16_t f25;
  char32_t f26;
  class f27;
  co_await f28;
  co_return f29;
  co_yield f30;
  coding_traits f31;
  compl f32;
  concept f33;
  const f34;
  const_cast f35;
  constexpr f36;
  continue f37;
  controller f38;
  covariant f39;
  crate f40;
  decltype f41;
  decoder f42;
  default f43;
  defer f44;
  deferred f45;
  delete f46;
  do f47;
  double f48;
  dynamic f49;
  dynamic_cast f50;
  else f51;
  encoder f52;
  ensure_values_instantiated f53;
  enum f54;
  err f55;
  explicit f56;
  export f57;
  extends f58;
  extern f59;
  external f60;
  factory f61;
  fallthrough f62;
  false f63;
  fidl f64;
  fidl_type f65;
  final f66;
  finally f67;
  float f68;
  fn f69;
  for f70;
  friend f71;
  func f72;
  future f73;
  futures f74;
  get f75;
  go f76;
  goto f77;
  has_invalid_tag f78;
  hash_code f79;
  if f80;
  impl f81;
  implements f82;
  import f83;
  in f84;
  index f85;
  inline f86;
  int f87;
  int16 f88;
  int32 f89;
  int64 f90;
  int8 f91;
  interface f92;
  is f93;
  let f94;
  lhs f95;
  library f96;
  list f97;
  long f98;
  loop f99;
  macro f100;
  map f101;
  match f102;
  mixin f103;
  mod f104;
  module f105;
  move f106;
  mut f107;
  mutable f108;
  namespace f109;
  never f110;
  new f111;
  no_such_method f112;
  noexcept f113;
  none f114;
  not f115;
  not_eq f116;
  null f117;
  nullptr f118;
  num f119;
  object f120;
  offset f121;
  offsetof f122;
  ok f123;
  on_open f124;
  operator f125;
  option f126;
  or f127;
  or_eq f128;
  override f129;
  package f130;
  part f131;
  priv f132;
  private f133;
  proc f134;
  protected f135;
  proxy f136;
  pub f137;
  public f138;
  pure f139;
  range f140;
  ref f141;
  register f142;
  reinterpret_cast f143;
  requires f144;
  result f145;
  rethrow f146;
  return f147;
  rhs f148;
  rune f149;
  runtime_type f150;
  select f151;
  self f152;
  send f153;
  set f154;
  set_controller f155;
  short f156;
  signed f157;
  sizeof f158;
  some f159;
  static f160;
  static_assert f161;
  static_cast f162;
  stream f163;
  string f164;
  struct f165;
  stub f166;
  super f167;
  switch f168;
  synchronized f169;
  template f170;
  this f171;
  thread_local f172;
  throw f173;
  to_string f174;
  trait f175;
  true f176;
  try f177;
  type f178;
  typedef f179;
  typeid f180;
  typename f181;
  typeof f182;
  uint16 f183;
  uint32 f184;
  uint64 f185;
  uint8 f186;
  union f187;
  unsafe f188;
  unsigned f189;
  unsized f190;
  use f191;
  using f192;
  value f193;
  value_of f194;
  value_union f195;
  values_map f196;
  var f197;
  vec f198;
  virtual f199;
  void f200;
  volatile f201;
  wchar_t f202;
  where f203;
  which f204;
  while f205;
  with f206;
  xor f207;
  xor_eq f208;
  xunion f209;
  yield f210;
  zx f211;
};
