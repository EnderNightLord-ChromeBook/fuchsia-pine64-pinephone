// WARNING: This file is machine generated by fidlgen.

#pragma once


namespace test {
namespace name {
namespace testing {

class Parent_TestBase : public Parent {
  public:
  virtual ~Parent_TestBase() { }
  virtual void NotImplemented_(const std::string& name) = 0;
  void GetChild(GetChildCallback callback) override {
    NotImplemented_("GetChild");
  }
  void GetChildRequest(GetChildRequestCallback callback) override {
    NotImplemented_("GetChildRequest");
  }
  void TakeChild(::fidl::InterfaceHandle<class Child> c) override {
    NotImplemented_("TakeChild");
  }
  void TakeChildRequest(::fidl::InterfaceRequest<Child> r) override {
    NotImplemented_("TakeChildRequest");
  }

};

class Child_TestBase : public Child {
  public:
  virtual ~Child_TestBase() { }
  virtual void NotImplemented_(const std::string& name) = 0;

};
}  // namespace testing
}  // namespace name
}  // namespace test
