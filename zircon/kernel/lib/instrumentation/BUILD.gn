# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

_profile_config = [ "$zx/public/gn/config/instrumentation:profile" ]
is_profile =
    toolchain.configs + _profile_config - _profile_config != toolchain.configs

library("instrumentation") {
  kernel = true
  sources = []
  public_deps = [
    "$zx/system/ulib/fbl:headers",
  ]
  if (is_kernel) {
    sources += [ "vmo.cc" ]
    deps = [
      "$zx/kernel/object",
      "$zx/system/ulib/fbl",
    ]
    deps += [ ":profile" ]
  }
}

# This defines C symbol `__llvm_profile_header` with reference to the other
# `__llvm_prof*` sections generated by the compiler.  These pasted together in
# the right order make up the data file format understood by `llvm-profdata`.
# That can be done statically in a linker script, or dynamically at run time
# by code referring to the various implicit `__start___llvm_prof*` symbols.
# The compiler also generates a dummy reference to `__llvm_profile_runtime`,
# so a symbol by that name must be defined at link time regardless; this file
# also defines it.
source_set("profile") {
  if (current_os == "win") {
    # The LLVM header file describing the instrumentation data tests this.
    defines = [ "_WIN32" ]
  }
  if (is_profile) {
    sources = [
      "profile.cc",
    ]
    include_dirs = [ "$zx/../garnet/third_party/llvm/include" ]
  }
}
