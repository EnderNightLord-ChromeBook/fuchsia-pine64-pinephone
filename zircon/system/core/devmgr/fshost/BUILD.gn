# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_set("fshost-registry") {
  sources = [
    "fs-manager.cc",
    "registry.cc",
    "vnode.cc",
  ]
  public_deps = [
    ":metrics",
    "$zx/system/fidl/fuchsia-fshost:c",
    "$zx/system/ulib/async-loop:async-loop-cpp",
    "$zx/system/ulib/fit",
    "$zx/system/ulib/fs",
    "$zx/system/ulib/memfs",
    "$zx/system/ulib/zircon-internal",
    "$zx/system/ulib/zx",
    "../shared",
  ]
  deps = [
    "$zx/system/ulib/fbl",
    "$zx/system/ulib/fdio",
    "$zx/system/ulib/fidl-utils",
    "$zx/system/ulib/memfs:memfs-cpp",
    "$zx/system/ulib/zircon",
    "$zx/system/ulib/zircon-internal",
  ]
}

source_set("metrics") {
  sources = [
    "metrics.cc",
    "metrics.h",
  ]
  public_deps = [
    "$zx/system/ulib/cobalt-client:headers",
    "$zx/system/ulib/fs/metrics:metrics-cobalt",
  ]
  deps = [
    "$zx/system/ulib/cobalt-client",
    "$zx/system/ulib/fs/metrics:metrics-cobalt",
  ]
}

source_set("block-watcher") {
  sources = [
    "block-device.cc",
    "block-watcher.cc",
    "encrypted-volume.cc",
    "filesystem-mounter.cc",
    "pkgfs-launcher.cc",
  ]
  public_deps = [
    ":metrics",
    "$zx/system/fidl/fuchsia-fshost:c",
    "$zx/system/ulib/async-loop:async-loop-cpp",
    "$zx/system/ulib/fit",
    "$zx/system/ulib/fs",
    "$zx/system/ulib/memfs",
    "$zx/system/ulib/zircon-internal",
    "$zx/system/ulib/zx",
    "../shared",
  ]
  deps = [
    ":fshost-registry",
    "$zx/system/fidl/fuchsia-device:c",
    "$zx/system/fidl/fuchsia-hardware-block:c",
    "$zx/system/fidl/fuchsia-hardware-block-partition:c",
    "$zx/system/fidl/fuchsia-hardware-zxcrypt:c",
    "$zx/system/ulib/fbl",
    "$zx/system/ulib/fdio",
    "$zx/system/ulib/fit",
    "$zx/system/ulib/fs",
    "$zx/system/ulib/fs-management",
    "$zx/system/ulib/gpt",
    "$zx/system/ulib/loader-service",
    "$zx/system/ulib/minfs",
    "$zx/system/ulib/trace",
    "$zx/system/ulib/trace-engine",
    "$zx/system/ulib/zircon",
    "$zx/system/ulib/zx",
    "$zx/system/ulib/zxcrypt:zxcrypt-fdio",
  ]
}

executable("fshost") {
  sources = [
    "main.cc",
  ]
  deps = [
    ":block-watcher",
    ":fshost-registry",
    ":metrics",
    "$zx/system/ulib/cobalt-client",
    "$zx/system/ulib/fs-management",
    "$zx/system/ulib/hermetic-decompressor",
    "$zx/system/ulib/loader-service",
    "$zx/system/ulib/ramdevice-client",
  ]
}

test("fshost-test") {
  test_group = "ddk"
  sources = [
    "fshost-test.cc",
  ]
  deps = [
    ":fshost-registry",
    ":metrics",
    "$zx/system/ulib/cobalt-client",
    "$zx/system/ulib/cobalt-client:in-memory-logger",
    "$zx/system/ulib/zxtest",
  ]
}

test("fshost-metrics-test") {
  test_group = "ddk"
  sources = [
    "metrics-test.cc",
  ]
  deps = [
    ":metrics",
    "$zx/system/ulib/cobalt-client:in-memory-logger",
    "$zx/system/ulib/fdio",
    "$zx/system/ulib/fs/metrics:metrics-cobalt",
    "$zx/system/ulib/zxtest",
  ]
}

test("block-watcher-test") {
  test_group = "ddk"
  sources = [
    "block-device-test.cc",
    "block-watcher-test.cc",
  ]
  deps = [
    ":block-watcher",
    "$zx/system/ulib/cobalt-client:in-memory-logger",
    "$zx/system/ulib/fs-management",
    "$zx/system/ulib/fs/metrics:metrics-cobalt",
    "$zx/system/ulib/minfs",
    "$zx/system/ulib/ramdevice-client",
    "$zx/system/ulib/zxtest",
  ]
}
