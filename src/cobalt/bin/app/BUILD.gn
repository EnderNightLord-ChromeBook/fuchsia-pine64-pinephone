# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//third_party/cobalt_config/metrics_registry.gni")
import("//third_party/protobuf/proto_library.gni")

# Generates the global_metrics_registry.pb file. This may be selectively
# overriden by callers who supply their own copy of their project's
# registry.
metrics_registry("global_metrics_registry") {
  global = true
}

source_set("lib") {
  sources = [
    "cobalt_app.cc",
    "cobalt_app.h",
    "cobalt_controller_impl.cc",
    "cobalt_controller_impl.h",
    "logger_factory_impl.cc",
    "logger_factory_impl.h",
    "logger_impl.cc",
    "logger_impl.h",
    "system_data_updater_impl.cc",
    "system_data_updater_impl.h",
    "timer_manager.cc",
    "timer_manager.h",
    "utils.cc",
    "utils.h",
  ]

  public_deps = [
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/network_wrapper",
    "//garnet/public/lib/syslog/cpp",
    "//sdk/lib/sys/cpp",
    "//src/cobalt/bin/utils:fuchsia_http_client",
    "//src/connectivity/wlan/lib/mlme/cpp:mlme",
    "//src/lib/fxl",
    "//third_party/cobalt/encoder",
    "//third_party/cobalt/logger",
    "//third_party/cobalt/logger:event_aggregator",
    "//third_party/cobalt/logger:project_context_factory",
    "//third_party/cobalt/util:pem_util",
    "//third_party/cobalt/util:posix_file_system",
    "//zircon/public/fidl/fuchsia-cobalt",
    "//zircon/public/fidl/fuchsia-sysinfo:fuchsia-sysinfo_c",
    "//zircon/public/lib/async-loop-cpp",
  ]
}

executable("app") {
  output_name = "cobalt"

  sources = [
    "cobalt_main.cc",
  ]

  deps = [
    ":lib",
    "//zircon/public/lib/trace",
    "//zircon/public/lib/trace-provider-with-fdio",
  ]
}

package("cobalt") {
  deps = [
    ":app",
    ":global_metrics_registry",
  ]

  binary = "cobalt"

  meta = [
    {
      path = rebase_path("meta/cobalt.cmx")
      dest = "cobalt.cmx"
    },
  ]

  resources = [
    {
      # Cobalt 1.0 analyzer public key.
      path = rebase_path("//third_party/cobalt/keys/analyzer_public.cobalt_key")
      dest = "keys/analyzer_public"
    },
    {
      # Cobalt 1.0 shuffler public key.
      path = rebase_path("//third_party/cobalt/keys/shuffler_public.cobalt_key")
      dest = "keys/shuffler_public"
    },
    {
      path = rebase_path(
              get_label_info(":global_metrics_registry", "target_gen_dir") +
              "/global_metrics_registry.pb")
      dest = "global_metrics_registry.pb"
    },
  ]
}

executable("cobalt_app_unittests") {
  testonly = true

  sources = [
    "logger_impl_test.cc",
    "system_data_updater_impl_test.cc",
    "timer_manager_test.cc",
  ]

  deps = [
    ":lib",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/gtest",
    "//sdk/lib/sys/cpp/testing:unit",
    "//src/lib/cobalt/cpp:cobalt_event_builder",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/cobalt/logger:logger_test_utils",
    "//zircon/public/fidl/fuchsia-cobalt",
  ]
}
