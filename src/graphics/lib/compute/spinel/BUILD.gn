# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../gn/build_rules.gni")

config("spinel_public_config") {
  # The sources and clients use 'spinel_xxx.h' to include the headers.
  include_dirs = [ "include/spinel" ]
}

source_set("spinel") {
  friend = [
    "platforms/vk",
    "platforms/vk/tests",
  ]
  public = [
    "include/spinel/spinel.h",
    "include/spinel/spinel_assert.h",
    "include/spinel/spinel_result.h",
    "include/spinel/spinel_types.h",

    # FIXME(digit): Should we include the public vulkan headers
    # here... or create a GN file in include/spinel... or just mimic
    # this in spinel/platforms/vk?
  ]
  sources = [
    "allocator_host.c",
    "allocator_host.h",
    "composition.c",
    "composition.h",
    "context.c",
    "context.h",
    "core.h",
    "core_c.h",
    "include/spinel/spinel.h",
    "include/spinel/spinel_assert.h",
    "include/spinel/spinel_result.h",
    "include/spinel/spinel_types.h",
    "path_builder.c",
    "path_builder.h",
    "raster_builder.c",
    "raster_builder.h",
    "spinel_assert.c",
    "state_assert.h",
    "styling.c",
    "styling.h",
    "suballocator.c",
    "suballocator.h",
    "weakref.c",
    "weakref.h",
  ]
  deps = [
    "${graphics_compute_dir}/common",
  ]
  public_configs = [ ":spinel_public_config" ]
}

# This group provides a target that tests can link against.
# It provides the Vulkan-based Spinel API, and the vk_find_targets
# loader library that simply links all target files into the library
# itself for easier deployments.

group("spinel_vk_for_tests") {
  public_deps = [
    ":spinel",
    "platforms/vk:vk",
    "platforms/vk:vk_find_target",
  ]
}

group("tests") {
  testonly = true
  public_deps = [
    "platforms/vk/tests",
  ]
}
