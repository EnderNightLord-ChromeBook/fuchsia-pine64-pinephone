# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_test.gni")
import("//build/test/test_package.gni")

rustc_test("integration_test_bin") {
  name = "integration_test"
  edition = "2018"
  source_root = "integration_test.rs"
  deps = [
    "//garnet/lib/rust/cm_fidl_translator",
    "//garnet/public/rust/fdio",
    "//garnet/public/rust/fuchsia-async",
    "//garnet/public/rust/fuchsia-component",
    "//garnet/public/rust/fuchsia-runtime",
    "//sdk/fidl/fuchsia.sys:fuchsia.sys-rustc",
    "//src/sys/component_manager/tests:test_utils",
    "//third_party/rust_crates:failure",
  ]
}

rustc_binary("collection_realm_bin") {
  name = "collection_realm"
  edition = "2018"
  source_root = "collection_realm.rs"
  deps = [
    "//garnet/lib/rust/io_util",
    "//garnet/public/lib/fidl/rust/fidl",
    "//garnet/public/rust/fuchsia-async",
    "//garnet/public/rust/fuchsia-component",
    "//garnet/public/rust/fuchsia-syslog",
    "//sdk/fidl/fuchsia.sys2:fuchsia.sys2-rustc",
    "//src/sys/component_manager/tests/fidl:components-rustc",
    "//third_party/rust_crates:failure",
    "//third_party/rust_crates:log",
    "//zircon/public/fidl/fuchsia-io:fuchsia-io-rustc",
  ]
}

rustc_binary("trigger_bin") {
  name = "trigger"
  edition = "2018"
  source_root = "trigger.rs"
  deps = [
    "//examples/components/routing/fidl:echo-rustc",
    "//garnet/public/rust/fuchsia-async",
    "//garnet/public/rust/fuchsia-component",
    "//src/sys/component_manager/tests/fidl:components-rustc",
    "//third_party/rust_crates:failure",
    "//third_party/rust_crates:futures-preview",
  ]
}

test_package("collections_integration_test") {
  deps = [
    ":integration_test_bin",
    ":collection_realm_bin",
    ":trigger_bin",
    "//src/sys/component_manager/tests:mock_pkg_resolver_bin",
    "//examples/components/routing/echo_client",
    "//examples/components/routing/echo_server",
  ]

  components =
      [ "//src/sys/component_manager:component_manager_as_v1_component" ]

  meta = [
    {
      path = rebase_path("meta/mock_pkg_resolver.cmx")
      dest = "mock_pkg_resolver.cmx"
    },
    {
      path = rebase_path("//examples/components/routing/meta/echo_server.cml")
      dest = "echo_server.cm"
    },
    {
      path = rebase_path("meta/trigger_a.cml")
      dest = "trigger_a.cm"
    },
    {
      path = rebase_path("meta/trigger_b.cml")
      dest = "trigger_b.cm"
    },
    {
      path = rebase_path("meta/trigger_realm.cml")
      dest = "trigger_realm.cm"
    },
    {
      path = rebase_path("meta/collection_realm.cml")
      dest = "collection_realm.cm"
    },
  ]

  binaries = [
    {
      name = "mock_pkg_resolver"
    },
    {
      name = "echo_server"
    },
    {
      name = "trigger"
    },
    {
      name = "collection_realm"
    },
  ]

  tests = [
    {
      name = "integration_test"
    }
  ]
}


