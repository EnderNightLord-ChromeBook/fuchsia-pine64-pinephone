# Copyright (c) 2018 The Fuchsia Authors.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

import("//build/package.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

executable("debug_test") {
  output_name = "debug_test"
  testonly = true
  sources = [
    "debug_test.cc",
  ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:debug",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fake_ddk",
  ]
}

executable("lifecycle_test") {
  output_name = "lifecycle_test"
  testonly = true
  sources = [
    "lifecycle_test.cc",
  ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:core",
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:driver_test",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fake_ddk",
  ]
}

executable("netbuf_test") {
  output_name = "netbuf_test"
  testonly = true
  sources = [
    "netbuf_test.cc",
  ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:debug",
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:linuxisms",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fake_ddk",
  ]
}

executable("sdio_test") {
  output_name = "sdio_test"
  testonly = true
  sources = [
    "sdio_test.cc",
  ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:core",
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:driver_test",
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:sdio",
    "//zircon/public/banjo/ddk.protocol.gpio",
    "//zircon/public/banjo/ddk.protocol.gpio:ddk.protocol.gpio_mock",
    "//zircon/public/banjo/ddk.protocol.sdio",
    "//zircon/public/banjo/ddk.protocol.sdio:ddk.protocol.sdio_mock",
    "//zircon/public/lib/async-loop",
    "//zircon/public/lib/broadcom",
    "//zircon/public/lib/ddk",
    "//zircon/public/lib/fake_ddk",
    "//zircon/public/lib/zxtest",
    "//zircon/system/public",
  ]
}

executable("workqueue_test") {
  output_name = "workqueue_test"
  testonly = true
  sources = [
    "workqueue_test.cc",
  ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:linuxisms",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fake_ddk",
    "//zircon/public/lib/sync",
  ]
}

unittest_package("brcmfmac_test") {
  package_name = "brcmfmac_test"

  deps = [
    ":debug_test",
    ":lifecycle_test",
    ":netbuf_test",
    ":sdio_test",
    ":workqueue_test",
  ]

  tests = [
    {
      name = "debug_test"
      environments = basic_envs
    },
    {
      name = "lifecycle_test"
      environments = basic_envs
    },
    {
      name = "netbuf_test"
      environments = basic_envs
    },
    {
      name = "sdio_test"
      environments = basic_envs
    },
    {
      name = "workqueue_test"
      environments = basic_envs
    },
  ]
}
