# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

visibility = [
  # TODO(ppi): extract the serialization version constant to a separate library
  "//src/ledger/*",
]

executable("app") {
  output_name = "ledger"
  sources = [
    "app.cc",
  ]

  deps = [
    ":constants",
    ":lib",
    "//garnet/public/lib/backoff",
    "//garnet/public/lib/fsl",
    "//sdk/fidl/fuchsia.modular.auth",
    "//sdk/fidl/fuchsia.net.oldhttp",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//src/ledger/bin/cobalt",
    "//src/ledger/bin/environment",
    "//src/ledger/bin/fidl",
    "//src/ledger/bin/fidl:syncable",
    "//src/ledger/bin/fidl/include",
    "//src/ledger/bin/inspect",
    "//src/ledger/bin/p2p_sync/impl",
    "//src/ledger/bin/storage/impl:lib",
    "//src/ledger/bin/storage/public",
    "//src/lib/fxl",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/trace-provider-with-fdio",
  ]

  configs += [ "//src/ledger:ledger_config" ]
}

source_set("lib") {
  sources = [
    "active_page_manager.cc",
    "active_page_manager.h",
    "active_page_manager_container.cc",
    "active_page_manager_container.h",
    "branch_tracker.cc",
    "branch_tracker.h",
    "delaying_facade.h",
    "diff_utils.cc",
    "diff_utils.h",
    "disk_cleanup_manager.h",
    "disk_cleanup_manager_impl.cc",
    "disk_cleanup_manager_impl.h",
    "fidl/serialization_size.cc",
    "fidl/serialization_size.h",
    "ledger_impl.cc",
    "ledger_impl.h",
    "ledger_manager.cc",
    "ledger_manager.h",
    "ledger_repository_factory_impl.cc",
    "ledger_repository_factory_impl.h",
    "ledger_repository_impl.cc",
    "ledger_repository_impl.h",
    "merging/auto_merge_strategy.cc",
    "merging/auto_merge_strategy.h",
    "merging/common_ancestor.cc",
    "merging/common_ancestor.h",
    "merging/conflict_resolver_client.cc",
    "merging/conflict_resolver_client.h",
    "merging/custom_merge_strategy.cc",
    "merging/custom_merge_strategy.h",
    "merging/last_one_wins_merge_strategy.cc",
    "merging/last_one_wins_merge_strategy.h",
    "merging/ledger_merge_manager.cc",
    "merging/ledger_merge_manager.h",
    "merging/merge_resolver.cc",
    "merging/merge_resolver.h",
    "merging/merge_strategy.h",
    "page_availability_manager.cc",
    "page_availability_manager.h",
    "page_connection_notifier.cc",
    "page_connection_notifier.h",
    "page_delegate.cc",
    "page_delegate.h",
    "page_eviction_manager.h",
    "page_eviction_manager_impl.cc",
    "page_eviction_manager_impl.h",
    "page_eviction_policies.cc",
    "page_eviction_policies.h",
    "page_impl.cc",
    "page_impl.h",
    "page_manager.cc",
    "page_manager.h",
    "page_snapshot_impl.cc",
    "page_snapshot_impl.h",
    "page_usage_db.cc",
    "page_usage_db.h",
    "page_usage_listener.h",
    "page_utils.cc",
    "page_utils.h",
    "sync_watcher_set.cc",
    "sync_watcher_set.h",
    "types.h",
  ]

  deps = [
    ":constants",
    ":serialization_version",
    "//garnet/public/lib/callback",
    "//garnet/public/lib/fsl",
    "//peridot/lib/base64url:base64url",
    "//peridot/lib/convert",
    "//peridot/lib/socket",
    "//sdk/lib/fidl/cpp",
    "//src/ledger/bin/cloud_sync/impl",
    "//src/ledger/bin/cloud_sync/public",
    "//src/ledger/bin/cobalt",
    "//src/ledger/bin/encryption/primitives",
    "//src/ledger/bin/environment",
    "//src/ledger/bin/fidl",
    "//src/ledger/bin/fidl:syncable",
    "//src/ledger/bin/fidl/include",
    "//src/ledger/bin/fidl_helpers",
    "//src/ledger/bin/filesystem",
    "//src/ledger/bin/inspect",
    "//src/ledger/bin/lock",
    "//src/ledger/bin/p2p_provider/impl",
    "//src/ledger/bin/p2p_sync/impl",
    "//src/ledger/bin/p2p_sync/public",
    "//src/ledger/bin/storage/impl:lib",
    "//src/ledger/bin/storage/public",
    "//src/ledger/bin/sync_coordinator/impl",
    "//src/ledger/bin/sync_coordinator/public",
    "//src/lib/fxl",
    "//zircon/public/lib/trace",
  ]

  public_deps = [
    "//garnet/public/lib/inspect_deprecated",
    "//sdk/fidl/fuchsia.ledger",
    "//sdk/fidl/fuchsia.modular.auth",
    "//sdk/lib/sys/cpp",
  ]

  configs += [ "//src/ledger:ledger_config" ]
}

source_set("constants") {
  sources = [
    "constants.cc",
    "constants.h",
  ]

  deps = [
    "//sdk/fidl/fuchsia.ledger",
  ]

  public_deps = [
    "//src/lib/fxl",
  ]

  configs += [ "//src/ledger:ledger_config" ]
}

source_set("serialization_version") {
  sources = [
    "serialization_version.h",
  ]

  public_deps = [
    "//src/lib/fxl",
  ]

  configs += [ "//src/ledger:ledger_config" ]
}

source_set("unittests") {
  testonly = true

  sources = [
    "active_page_manager_container_unittest.cc",
    "active_page_manager_unittest.cc",
    "delaying_facade_unittest.cc",
    "disk_cleanup_manager_unittest.cc",
    "fidl/serialization_size_unittest.cc",
    "ledger_manager_unittest.cc",
    "ledger_repository_factory_impl_unittest.cc",
    "ledger_repository_impl_unittest.cc",
    "merging/common_ancestor_unittest.cc",
    "merging/conflict_resolver_client_unittest.cc",
    "merging/merge_resolver_unittest.cc",
    "merging/test_utils.cc",
    "merging/test_utils.h",
    "page_availability_manager_unittest.cc",
    "page_connection_notifier_unittest.cc",
    "page_delegate_unittest.cc",
    "page_eviction_manager_impl_unittest.cc",
    "page_eviction_policies_unittest.cc",
    "page_impl_unittest.cc",
    "page_manager_unittest.cc",
    "page_usage_db_unittest.cc",
    "sync_watcher_set_unittest.cc",
  ]

  deps = [
    ":constants",
    ":lib",
    "//garnet/public/lib/backoff/testing",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/inspect_deprecated",
    "//garnet/public/lib/inspect_deprecated:reader",
    "//garnet/public/lib/inspect_deprecated/testing:testing",
    "//peridot/lib/convert",
    "//peridot/lib/scoped_tmpfs",
    "//sdk/fidl/fuchsia.modular.auth",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//src/ledger/bin/cloud_sync/impl",
    "//src/ledger/bin/cloud_sync/testing",
    "//src/ledger/bin/encryption/fake",
    "//src/ledger/bin/encryption/primitives",
    "//src/ledger/bin/fidl/include:include",
    "//src/ledger/bin/inspect",
    "//src/ledger/bin/storage/fake:lib",
    "//src/ledger/bin/storage/impl:lib",
    "//src/ledger/bin/storage/public",
    "//src/ledger/bin/storage/testing",
    "//src/ledger/bin/sync_coordinator/public",
    "//src/ledger/bin/sync_coordinator/testing",
    "//src/ledger/bin/testing:lib",
    "//src/lib/fxl",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
  ]

  configs += [ "//src/ledger:ledger_config" ]
}
